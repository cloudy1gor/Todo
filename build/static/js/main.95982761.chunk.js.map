{"version":3,"sources":["components/todo-header/TodoHeader.jsx","components/todo-input/TodoInput.jsx","components/todo-list-item/TodoListItem.jsx","components/todo-list/TodoList.jsx","components/todo-filter/TodoFilter.jsx","components/item-add-form/itemAddForm.jsx","components/app/App.jsx","index.js"],"names":["TodoHeader","className","TodoInput","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDelete","onToggleImportant","onToggleDone","classNames","done","important","onClick","TodoList","todos","elements","map","item","id","itemProps","TodoFilter","filterButtons","name","filter","onFilterChange","buttons","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdd","App","maxId","todoData","createTodoItem","deleteItem","index","findIndex","el","before","slice","after","console","log","text","newItem","toggleProperty","arr","propName","idx","oldItem","items","search","length","toLowerCase","indexOf","visibleItems","doneCount","toDoCount","toDo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95982761.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./TodoHeader.css\";\r\n\r\nconst TodoHeader = () => {\r\n  return <h1 className=\"header\">TODO list</h1>;\r\n};\r\n\r\nexport default TodoHeader;\r\n","import React, { Component } from \"react\";\r\nimport \"./TodoInput.css\";\r\n\r\nexport default class TodoInput extends Component {\r\n  state = {\r\n    term: \"\",\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({ term });\r\n    this.props.onSearchChange(term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className=\"input\"\r\n        placeholder=\"Search\"\r\n        value={this.state.term}\r\n        onChange={this.onSearchChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./TodoListItem.css\";\r\n\r\nexport default class TodoListItem extends Component {\r\n  render() {\r\n    const {\r\n      label,\r\n      onDelete,\r\n      onToggleImportant,\r\n      onToggleDone,\r\n      done,\r\n      important,\r\n    } = this.props;\r\n\r\n    let classNames = \"item__label\";\r\n    if (done) {\r\n      classNames += \" item--done\";\r\n    }\r\n\r\n    if (important) {\r\n      classNames += \" item--important\";\r\n    }\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span className=\"item__name\" onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n\r\n        <button\r\n          className=\"item__btn item__btn--important\"\r\n          type=\"button\"\r\n          onClick={onToggleImportant}\r\n        >\r\n          !\r\n        </button>\r\n        <button\r\n          className=\"item__btn item__btn--delete\"\r\n          type=\"button\"\r\n          onClick={onDelete}\r\n        >\r\n          X\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport TodoListItem from \"../todo-list-item/TodoListItem\";\r\nimport \"./TodoList.css\";\r\n\r\nconst TodoList = ({ todos, onDelete, onToggleImportant, onToggleDone }) => {\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li className=\"item\" key={id}>\r\n        <TodoListItem\r\n          {...itemProps}\r\n          // label={item.label}\r\n          // important={item.important}\r\n          // id={item.id}\r\n          onDelete={() => onDelete(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"list\">{elements}</ul>;\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { Component } from \"react\";\r\nimport \"./TodoFilter.css\";\r\n\r\nexport default class TodoFilter extends Component {\r\n  filterButtons = [\r\n    { name: \"all\", label: \"All\" },\r\n    { name: \"active\", label: \"Active\" },\r\n    { name: \"done\", label: \"Done\" },\r\n  ];\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n\r\n    const buttons = this.filterButtons.map(({ name, label }) => {\r\n      const isActive = filter === name;\r\n      const className = isActive ? \"filter__btn--active\" : \"\";\r\n\r\n      return (\r\n        <button\r\n          key={name}\r\n          type=\"button\"\r\n          onClick={() => onFilterChange(name)}\r\n          className={`filter__btn ${className}`}\r\n        >\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return <div className=\"filter\">{buttons}</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./itemAddForm.css\";\r\n\r\nexport default class ItemAddForm extends Component {\r\n  state = {\r\n    label: \"\",\r\n  };\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onItemAdd(this.state.label);\r\n    this.setState({\r\n      label: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"add-form\" onSubmit={this.onSubmit}>\r\n        <input\r\n          className=\"add-form__input\"\r\n          type=\"text\"\r\n          onChange={this.onLabelChange}\r\n          placeholder=\"What you want to do?\"\r\n          value={this.state.label}\r\n        />\r\n        <button\r\n          className=\"add-form__btn\"\r\n          type=\"button\"\r\n          onClick={(this.onLabelChange, this.onSubmit)}\r\n        >\r\n          Add item\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport TodoHeader from \"../todo-header/TodoHeader\";\r\nimport TodoInput from \"../todo-input/TodoInput\";\r\nimport TodoList from \"../todo-list/TodoList\";\r\nimport TodoFilter from \"../todo-filter/TodoFilter\";\r\nimport ItemAddForm from \"../item-add-form/itemAddForm\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem(\"Learn React\"),\r\n      this.createTodoItem(\"Create React App\"),\r\n      this.createTodoItem(\"Drink a cup of tea\"),\r\n    ],\r\n    term: \"\",\r\n    filter: \"\", // active, all, done\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++,\r\n    };\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const index = todoData.findIndex((el) => el.id === id);\r\n\r\n      const before = todoData.slice(0, index);\r\n      const after = todoData.slice(index + 1);\r\n\r\n      const newArray = [...before, ...after];\r\n\r\n      return {\r\n        todoData: newArray,\r\n      };\r\n    });\r\n    console.log(id);\r\n  };\r\n\r\n  onItemAdd = (text) => {\r\n    //генерируем =id\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    // добавляем новый item в массив\r\n    this.setState(({ todoData }) => {\r\n      const newArr = [...todoData, newItem];\r\n\r\n      return {\r\n        todoData: newArr,\r\n      };\r\n    });\r\n\r\n    console.log(\"Added\", text);\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"done\"),\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"important\"),\r\n      };\r\n    });\r\n  };\r\n\r\n  search(items, search) {\r\n    if (search.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n    });\r\n  }\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({ term });\r\n  };\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case \"all\":\r\n        return items;\r\n      case \"active\":\r\n        return items.filter((item) => !item.done);\r\n      case \"done\":\r\n        return items.filter((item) => item.done);\r\n\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  render() {\r\n    const { todoData, term, filter } = this.state;\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n    const doneCount = todoData.filter((el) => el.done).length;\r\n    const toDoCount = todoData.length - doneCount;\r\n    return (\r\n      <div className=\"todo\">\r\n        <TodoHeader toDo={toDoCount} done={doneCount} />\r\n        <div className=\"todo__menu\">\r\n          <TodoInput onSearchChange={this.onSearchChange} />\r\n          <TodoFilter filter={filter} onFilterChange={this.onFilterChange} />\r\n        </div>\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDelete={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone}\r\n        />\r\n        <ItemAddForm onItemAdd={this.onItemAdd} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/app/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}